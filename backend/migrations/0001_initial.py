# Generated by Django 3.1.1 on 2022-05-05 14:41

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Annotation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=256)),
                ('color', models.CharField(max_length=256, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Plugin',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='PluginRun',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('update_date', models.DateTimeField(auto_now_add=True)),
                ('type', models.CharField(max_length=256)),
                ('results', models.BinaryField(null=True)),
                ('progress', models.FloatField(default=0.0)),
                ('status', models.CharField(choices=[('Q', 'Queued'), ('R', 'Running'), ('D', 'Done'), ('E', 'Error')], default='U', max_length=2)),
            ],
        ),
        migrations.CreateModel(
            name='PluginRunResult',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=256)),
                ('data', models.BinaryField(null=True)),
                ('type', models.CharField(choices=[('V', 'VIDEO_DATA'), ('I', 'IMAGE_DATA'), ('S', 'SCALAR_DATA'), ('H', 'HIST_DATA'), ('R', 'RGB_HIST_DATA')], default='S', max_length=2)),
                ('plugin_run', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.pluginrun')),
            ],
        ),
        migrations.CreateModel(
            name='Timeline',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=256)),
                ('type', models.CharField(choices=[('A', 'ANNOTATION'), ('R', 'PLUGIN_RESULT')], default='A', max_length=2)),
                ('order', models.IntegerField(default=0)),
                ('collapse', models.BooleanField(default=False)),
                ('plugin_run_result', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='backend.pluginrunresult')),
            ],
        ),
        migrations.CreateModel(
            name='TimelineSegment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('color', models.CharField(max_length=256, null=True)),
                ('start', models.FloatField(default=0)),
                ('end', models.FloatField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Video',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=256)),
                ('license', models.CharField(max_length=256)),
                ('ext', models.CharField(max_length=256)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('fps', models.FloatField(blank=True, null=True)),
                ('duration', models.FloatField(blank=True, null=True)),
                ('height', models.IntegerField(blank=True, null=True)),
                ('width', models.IntegerField(blank=True, null=True)),
                ('owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TimelineSegmentAnnotation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('annotation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.annotation')),
                ('timeline_segment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.timelinesegment')),
            ],
        ),
        migrations.AddField(
            model_name='timelinesegment',
            name='annotations',
            field=models.ManyToManyField(through='backend.TimelineSegmentAnnotation', to='backend.Annotation'),
        ),
        migrations.AddField(
            model_name='timelinesegment',
            name='timeline',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.timeline'),
        ),
        migrations.AddField(
            model_name='timeline',
            name='video',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.video'),
        ),
        migrations.CreateModel(
            name='Shortcut',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('type', models.CharField(max_length=256, null=True)),
                ('keys', models.JSONField(null=True)),
                ('keys_string', models.CharField(max_length=256, null=True)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('video', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='backend.video')),
            ],
        ),
        migrations.AddField(
            model_name='pluginrun',
            name='video',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.video'),
        ),
        migrations.CreateModel(
            name='AnnotationShortcut',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('annotation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.annotation')),
                ('shortcut', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.shortcut')),
            ],
        ),
        migrations.CreateModel(
            name='AnnotationCategory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=256)),
                ('color', models.CharField(max_length=256, null=True)),
                ('owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('video', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='backend.video')),
            ],
        ),
        migrations.AddField(
            model_name='annotation',
            name='category',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='backend.annotationcategory'),
        ),
        migrations.AddField(
            model_name='annotation',
            name='owner',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='annotation',
            name='video',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='backend.video'),
        ),
    ]
